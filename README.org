#+title: Personal Dotfiles - Wayland Desktop Environment
#+author: Pavlos Melissinos
#+date: 2025-07-27

A personal dotfiles repository for a modern Linux desktop environment using Sway
(Wayland compositor) with declarative package management through
home-manager/Nix.

* Overview

This repository contains configuration files for a complete Wayland-first
desktop environment optimized for development work. All user packages are
managed declaratively through home-manager/Nix, providing reproducible
environments and simplified maintenance.

** Key Features
- 🏗️ *Wayland-first desktop* with Sway tiling window manager
- 📦 *Declarative package management* with home-manager/Nix (95+ packages)
- 🔐 *U2F hardware key authentication* for system and web services
- 📁 *XDG Base Directory compliance* for clean home directory organization
- 🔄 *Reproducible environments* with complete configuration in version control

** Architecture
#+begin_example
┌─ USER SPACE ────────────────────────────────────┐
│  home-manager/Nix (PRIMARY & ONLY)              │
│  ├─ Development Tools (rust, node, python...)   │
│  ├─ Desktop Environment (sway, waybar, mako...) │
│  ├─ Applications (firefox, vlc, steam...)       │
│  ├─ System Libraries (fonts, certificates...)   │
│  └─ Configuration Management (git, zsh, emacs)  │
└─────────────────────────────────────────────────┘
┌─ SYSTEM SPACE ──────────────────────────────────┐
│  DNF/RPM (System packages only)                 │
│  ├─ Kernel and drivers                          │
│  ├─ System services (systemd, etc.)             │
│  ├─ Core libraries (glibc, etc.)                │
│  └─ Hardware firmware                           │
└─────────────────────────────────────────────────┘
┌─ SANDBOXED ─────────────────────────────────────┐
│  Flatpak (Platform runtimes only)               │
│  ├─ No user applications installed              │
│  └─ System platform dependencies only           │
└─────────────────────────────────────────────────┘
#+end_example

* 🚀 Quick Start

** Prerequisites
- Fedora-based Linux system (or compatible)
- Nix package manager installed
- home-manager configured

** Installation
1. Clone this repository to your home directory
2. Apply home-manager configuration:
   #+begin_src bash
   home-manager switch
   #+end_src
3. Reload Sway configuration:
   #+begin_src bash
   swaymsg reload
   #+end_src

* 📋 Component Overview

** Desktop Environment
| Component | Purpose                        | Configuration               |
|-----------+--------------------------------+-----------------------------|
| [[https://swaywm.org/][Sway]]      | Wayland compositor & tiling WM | =.config/sway/config=         |
| [[https://github.com/Alexays/Waybar][Waybar]]    | Status bar                     | =.config/waybar/=             |
| [[https://hg.sr.ht/~scoopta/wofi][Wofi]]      | Application launcher           | =.config/wofi/=               |
| [[https://github.com/emersion/mako][Mako]]      | Notification daemon            | =.config/mako/=               |
| [[https://github.com/swaywm/swaylock][Swaylock]]  | Screen locker (DISABLED)       | =.config/swaylock/= (unused)  |
| [[https://github.com/emersion/kanshi][Kanshi]]    | Multi-monitor management       | =.config/kanshi/=             |
| [[https://gitlab.com/chinstrap/gammastep][Gammastep]] | Blue light filter              | Configured via home-manager |

** Development Tools
| Tool      | Purpose                        | Configuration            |
|-----------+--------------------------------+--------------------------|
| [[https://www.gnu.org/software/emacs/][Emacs]]     | Primary editor (XDG compliant) | =.config/emacs/init.el=    |
| [[https://alacritty.org/][Alacritty]] | Terminal emulator              | =.config/alacritty/=       |
| [[https://www.zsh.org/][Zsh]]       | Shell with custom theme        | =.config/zsh/=             |
| [[https://github.com/tmux/tmux][Tmux]]      | Terminal multiplexer           | =.config/tmux/=            |
| Git       | Version control                | Managed via home-manager |

** Package Management
- *Primary*: home-manager/Nix (ALL user packages - 95+)
- *System*: DNF/RPM (kernel, drivers, system services only)
- *Sandboxed*: Flatpak (platform runtimes only, no user applications)

* 🔐 Security Features

** U2F Hardware Key Authentication
Configured for enhanced security across:
- GDM/GNOME login
- sudo administrative tasks
- ~~Swaylock screen unlock~~ (currently disabled due to unlock issues)
- Web services (GitHub, GitLab, cloud providers)

See [[docs/architecture/adr/0004-u2f-hardware-key-authentication.md][ADR-0004]] for implementation details.

** Supported Services
- GitHub, GitLab
- Porkbun, Namecheap (domain management)
- Bitwarden (password management)
- AWS and other cloud providers

* 📁 File Organization

** XDG Base Directory Compliance
All applications are configured to respect XDG directories where possible:
- =~/.config/= - Application configuration
- =~/.cache/= - Non-essential cached data
- =~/.local/share/= - Application data files
- =~/.local/state/= - Application state data

** Repository Structure
#+begin_example
.
├── .config/              # Application configurations
│   ├── home-manager/     # Nix package & config management
│   ├── sway/             # Window manager configuration
│   ├── waybar/           # Status bar configuration
│   ├── emacs/            # Editor configuration
│   └── zsh/              # Shell configuration
├── docs/                 # Documentation & ADRs
│   └── architecture/adr/ # Architecture Decision Records
├── CLAUDE.md             # AI assistant guidance
└── README.org            # This file
#+end_example

* 🛠️ Development Workflow

** Package Management
#+begin_src bash
# Install new packages: Edit .config/home-manager/home.nix, then:
home-manager switch

# System updates (base OS only):
sudo dnf upgrade --refresh

# Check package status:
ls ~/.nix-profile/bin/ | wc -l  # Count available binaries
#+end_src

** Configuration Updates
#+begin_src bash
# Apply home-manager changes:
home-manager switch

# Reload Sway:
swaymsg reload

# Restart Waybar (if needed):
nohup waybar &
#+end_src

** Git Workflow
#+begin_src bash
# Commit configuration changes:
git add .config/ docs/
git commit -m "Add feature X to improve Y

Explain why change was needed and context.
Reference ADR-XXX if architectural decision.

🤖 Generated with [Claude Code](https://claude.ai/code)

Co-Authored-By: Claude <noreply@anthropic.com>"
#+end_src

* 📚 Documentation

** Architecture Decision Records (ADRs)
All significant architectural decisions are documented in =docs/architecture/adr/=:
- [[docs/architecture/adr/0000-record-architecture-decisions.md][ADR-0000]]: Record Architecture Decisions
- [[docs/architecture/adr/0001-package-manager-consolidation.md][ADR-0001]]: Complete Package Manager Consolidation
- [[docs/architecture/adr/0002-sway-window-manager-wayland-first.md][ADR-0002]]: Sway Window Manager with Wayland-First Desktop Environment
- [[docs/architecture/adr/0003-xdg-directory-compliance.md][ADR-0003]]: XDG Base Directory Specification Compliance
- [[docs/architecture/adr/0004-u2f-hardware-key-authentication.md][ADR-0004]]: U2F Hardware Key Authentication
- [[docs/architecture/adr/0005-line-length-text-formatting-standards.md][ADR-0005]]: Line Length and Text Formatting Standards
- [[docs/architecture/adr/0006-trailing-whitespace-policy.md][ADR-0006]]: Trailing Whitespace Policy
- [[docs/architecture/adr/0007-git-commit-message-standards.md][ADR-0007]]: Git Commit Message Standards

** Additional Documentation
- =CLAUDE.md= - Guidance for AI assistant sessions
- Package reports and migration documentation available in root directory

* ⚠️ Known Issues & Workarounds

** Desktop Environment
- *Sleep recovery*: Laptop screen may not restore after sleep (Sway limitation)
- *Firefox crashes*: Occasional crashes when reloading Sway or returning from
  sleep
- *Waybar disappears*: Restart with =nohup waybar &= if status bar disappears

** Application Limitations
- *Non-XDG applications*: Firefox, Thunderbird, Kodi don't respect XDG directories
- *Legacy compatibility*: Some applications may require XWayland for proper
  operation

** Security & Authentication
- *Swaylock disabled*: Screen locker disabled due to unlock failures with
  home-manager/Nix version
- *Alternative*: Currently relying on system-level screen locking only
- *Status*: Investigating alternative screen lock solutions

** Viber Messaging (AppImage)
- *Package status*: nixpkgs viber package broken due to libxml2 compatibility
  (GitHub Issue #421440)
- *Solution*: Using official Viber AppImage with launcher script
- *Notification issues*:
  - Notifications appear in center of screen instead of configured position
  - Uses Viber's purple branding/colors instead of system mako theme
  - Functional but doesn't fully integrate with desktop notification styling

** Package Management Status
- *Guix elimination incomplete*: 74 packages still installed despite empty manifest
  (`.config/guix/packages.scm` emptied but packages persist in user profile)
- *Root cause*: Guix packages remain until explicitly removed with `guix package --remove`
- *Impact*: Mixed package management creates complexity and potential conflicts
- *Options*: Either complete removal via `guix package --delete-generations` or 
  document hybrid approach with clear package boundaries

** Troubleshooting
#+begin_src bash
# Sway IPC socket issues:
export SWAYSOCK=/run/user/$(id -u)/sway-ipc.$(id -u).$(pgrep -x sway).sock

# Temporary build space (if /tmp is full):
sudo mount -o remount,size=15G /tmp
#+end_src

* 🔄 Maintenance

** Regular Tasks
- Run =home-manager switch= after configuration changes
- Periodic =sudo dnf upgrade --refresh= for system packages
- Monitor =~/.nix-profile/bin/= for binary availability
- Update ADRs when making architectural changes

** Backup Strategy
- Configuration files are tracked in git
- XDG compliance allows selective backup (exclude cache directories)
- Complete user environment reproducible from =home.nix=

* 📈 System Status

*Last major update*: 2025-07-27 - Complete package manager consolidation
*Packages managed*: 95+ via home-manager/Nix
*Architecture*: Wayland-first with modern security features
*Reproducibility*: Complete user environment captured in version control

---

*This repository represents a fully consolidated, reproducible desktop
 environment optimized for development productivity and modern security
 practices.*
