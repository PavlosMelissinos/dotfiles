# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
#set $term urxvt256c-ml
set $term gnome-terminal
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
#set $menu dmenu_path | dmenu | xargs swaymsg exec --
set $menu dmenu_path | wofi --show drun -i | xargs swaymsg exec --

#set $MOZ_ENABLE_WAYLAND 1
set $QT_WAYLAND_FORCE_DPI physical


set $cl_high #009ddc
set $cl_indi #d9d8d8
set $cl_back #231f20
set $cl_fore #d9d8d8
set $cl_urge #ee2e24

# Colors                border   bg       text     indi     childborder
client.focused          $cl_high $cl_high $cl_fore $cl_indi $cl_high
client.focused_inactive $cl_back $cl_back $cl_fore $cl_back $cl_back
client.unfocused        $cl_back $cl_back $cl_fore $cl_back $cl_back
client.urgent           $cl_urge $cl_urge $cl_fore $cl_urge $cl_urge


# Window borders
default_border pixel 2
default_floating_border normal
hide_edge_borders smart

smart_gaps on
gaps inner 5

# Window transparency
#set $opacity 0.8
#for_window [class=".*"] opacity $opacity
#for_window [app_id=".*"] opacity $opacity

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
#output * bg /usr/share/backgrounds/default.png fill
exec ~/.azotebg

exec /usr/libexec/geoclue-2.0/demos/agent
exec gammastep

exec mkfifo $SWAYSOCK.wob && tail -f $SWAYSOCK.wob | wob

exec flashfocus

set $monitor1 eDP-1
set $monitor2 "Dell Inc. DELL U2518D 3C4YP88P229L"
set $monitor3 "Dell Inc. DELL U2311H HV8XP0BN1VFL"

output $monitor1 {
    resolution 1920x1080 position 0,800
    scale 1.5
}

output $monitor2 {

    # m1 scale 1
    #resolution 2560x1440 position 1920,130

    # m1 scale 1.2
    #resolution 2560x1440 position 1600,109

    # m1 scale 1.5
    resolution 2560x1440 position 1280,130

    # m1 scale 2
    #resolution 2560x1440 position 960,65

    #scale 1.25
}

output $monitor3 {
    # m1 scale 1, m2 scale 1
    #resolution 1080x1920 position 4480,0

    # m1 scale 1, m2 scale 1.2
    #resolution 1080x1920 position 4054,0

    # m1 scale 1, m2 scale 1.5
    #resolution 1080x1920 position ????,0

    # m1 scale 1, m2 scale 2
    # resolution 1080x1920 position 3200,0

    # m1 scale 1.2, m2 scale 1
    #resolution 1080x1920 position 4160,0

    # m1 scale 1.2, m2 scale 1.2
    #resolution 1080x1920 position 3734,0

    # m1 scale 1.2, m2 scale 1.5
    #resolution 1080x1920 position ????,0

    # m1 scale 1.2, m2 scale 2
    #resolution 1080x1920 position ????,0

    # m1 scale 1.5, m2 scale 1
    resolution 1080x1920 position 3840,0

    # m1 scale 1.5, m2 scale 1.2
    #resolution 1080x1920 position 3413,0

    # m1 scale 1.5, m2 scale 1.25
    #resolution 1080x1920 position 3328,0

    # m1 scale 1.5, m2 scale 1.5
    #resolution 1080x1920 position 2987,0

    # m1 scale 2, m2 scale 1
    #resolution 1080x1920 position 3520,0

    # m1 scale 2, m2 scale 1.2
    #resolution 1080x1920 position 3094,0

    # m1 scale 1.5, m2 scale 1.2
    #resolution 1080x1920 position 3734,0

    transform 270
}

workspace 1 {
    output $monitor1
}

workspace 2 {
    output $monitor2
    output $monitor1
}

workspace 3 {
    output $monitor3
    output $monitor1
}

workspace 4 {
    output $monitor2
    output $monitor1
}

workspace 5 {
    output $monitor3
    output $monitor1
}

workspace 6 {
    output $monitor2
    output $monitor1
}

for_window [app_id="Kodi"] {
    move to workspace 6
}

for_window [class="Emacs"] {
    move to workspace 4
}

assign [title="main-term"] workspace 2
exec $term -t main-term
exec emacs

# Clamshell mode

# set $lock_script $HOME/.config/swaylock/lock.sh swaylock

set $laptop eDP-1
# Clamshell mode or lock & sleep
# This is a if/else statement: [ outputs_count == 1 ] && true || false
bindswitch --reload --locked lid:on exec '[ $(swaymsg -t get_outputs | grep name | wc -l) == 1 ] && ($sleep) || ($notify "Clamshell mode" "Laptop screen off" && swaymsg output $laptop disable)'

bindswitch --reload --locked lid:off output $laptop enable


# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
exec swayidle -w \
         timeout 300 'swaylock -f -c 000000' \
         timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
         before-sleep 'swaylock -f -c 000000'

# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

# Lock screen
bindsym $mod+Alt+l exec swaylock -f


### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
   input "2:7:SynPS/2_Synaptics_TouchPad" {
       natural_scroll enabled
#       middle_emulation enabled
   }

   input * {
        xkb_layout "us,gr"
        xkb_options "grp:win_space_toggle"
   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term
    bindsym $mod+Shift+Return exec $term, split toggle

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu
    bindsym $mod+Shift+d exec $menu, split toggle

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    #bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
    bindsym $mod+Shift+e exec wlogout

#
# Extra keys
#
#bindsym XF86AudioRaiseVolume exec ~/bin/pavolume +5% > $SWAYSOCK.wob
#bindsym XF86AudioLowerVolume exec ~/bin/pavolume -5% > $SWAYSOCK.wob
#bindsym XF86AudioMute exec ~/bin/pavolume toggle > $SWAYSOCK.wob
#bindsym XF86AudioRaiseVolume exec pamixer -ui 2 && pamixer --get-volume > $SWAYSOCK.wob
#bindsym XF86AudioLowerVolume exec pamixer -ud 2 && pamixer --get-volume > $SWAYSOCK.wob
#bindsym XF86AudioMute exec pamixer --toggle-mute && ( pamixer --get-mute && echo 0 > $SWAYSOCK.wob ) || pamixer --get-volume > $SWAYSOCK.wob
bindsym XF86AudioRaiseVolume exec amixer sset Master 5%+ | sed -En 's/.*\[([0-9]+)%\].*/\1/p' | head -1 > $SWAYSOCK.wob
bindsym XF86AudioLowerVolume exec amixer sset Master 5%- | sed -En 's/.*\[([0-9]+)%\].*/\1/p' | head -1 > $SWAYSOCK.wob
bindsym XF86AudioMute exec amixer sset Master toggle | sed -En '/\[on\]/ s/.*\[([0-9]+)%\].*/\1/ p; /\[off\]/ s/.*/0/p' | head -1 > $SWAYSOCK.wob
bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
bindsym XF86MonBrightnessDown exec brightnessctl set 5%-
bindsym XF86MonBrightnessUp exec brightnessctl set +5%
#bindsym XF86MonBrightnessDown exec light -U 5 && light -G | cut -d'.' -f1 > $SWAYSOCK.wob
#bindsym XF86MonBrightnessUp exec light -A 5 && light -G | cut -d'.' -f1 > $SWAYSOCK.wob
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# Screenshot with grim and swappy
bindsym print exec grim -g "$(slurp)" - | swappy -f -
bindsym Shift+print exec grim - | swappy -f -

#
# Moving around:
#
    # Move your focus around
    bindsym --to-code $mod+$left focus left
    bindsym --to-code $mod+$down focus down
    bindsym --to-code $mod+$up focus up
    bindsym --to-code $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym --to-code $mod+Left focus left
    bindsym --to-code $mod+Down focus down
    bindsym --to-code $mod+Up focus up
    bindsym --to-code $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym --to-code $mod+Shift+$left move left
    bindsym --to-code $mod+Shift+$down move down
    bindsym --to-code $mod+Shift+$up move up
    bindsym --to-code $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym --to-code $mod+Shift+Left move left
    bindsym --to-code $mod+Shift+Down move down
    bindsym --to-code $mod+Shift+Up move up
    bindsym --to-code $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

    bindsym $mod+Control+Shift+Right move workspace to output right
    bindsym $mod+Control+Shift+Left move workspace to output left
    bindsym $mod+Control+Shift+Down move workspace to output down
    bindsym $mod+Control+Shift+Up move workspace to output up

#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv
    bindsym $mod+c split toggle
    bindsym $mod+Shift+w split c, layout tabbed

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent

    # Flash current focus
    bindsym $mod+n exec flash_window

#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
#bar {
#    position top
#    # When the status_command prints a new line to stdout, swaybar updates.
#    # The default just shows the current date and time.
#    status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done
#
#    colors {
#        statusline #ffffff
#        background #323232
#        inactive_workspace #32323200 #32323200 #5c5c5c
#    }
#}

bar {
    swaybar_command waybar
    #swaybar_command i3status
}
include /etc/sway/config.d/*

#exec "systemctl --user import-environment; systemctl --user start sway-session.target"
