;; -*- coding: utf-8-unix -*-
;; Automatically written history of CIDER REPL session
;; Edit at your own risk

("vblocks" "vblcks" "vblocks" "(let [a (node [x y 0])]
  (code-gen a))" "(let [a (node [x y 0])]
  (core/code-gen a))" "(let [a (node [x y 0])]
  (clisk/code-gen a))" "(let [a (node [x y 0])]
  (clisk.core/code-gen a))" "(let [a (node [x y 0])]
  (code-gen a))" "(node [x y 0])" "(show (v* [x y 0] 5))" "(show (v+ 
        [x 0 0] 
        [0 y 0])) " "(show [0 y 0])" "(show [x y 0])" "(show [x y z])" "(show [x y 0])" "(show [x 0 0])" "(use '[clisk core node functions patterns colours textures util])" "(clisk.live/show clisk.colours/pink)" "(clisk.live/show pink)" "(show pink)" "(clisk.live/show [0.5 0.5 0.5])" "(clisk.live/show 0.5)" "(clisk.live/show [1 0 0])" "(macroexpand-1 clisk.live/v*)" "(macroexpand clisk.live/v*)" "clisk.live/v*" "source clisk.live/v*" "v*" "(+ 1 1)" "(use `clisk.live)" "(require `(clisk.ilve :as clisk))" "(require '(clisk.ilve :as clisk))")